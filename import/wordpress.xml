<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.6" created="2013-09-06 11:27" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Code and Colours</title>
	<link>http://code.jelmerdemaat.nl</link>
	<description>Build websites like you mean it.</description>
	<pubDate>Fri, 06 Sep 2013 11:27:19 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://code.jelmerdemaat.nl</wp:base_site_url>
	<wp:base_blog_url>http://code.jelmerdemaat.nl</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>Jelmer</wp:author_login><wp:author_email>post@jelmerdemaat.nl</wp:author_email><wp:author_display_name><![CDATA[Jelmer]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>css</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CSS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>visionary-ramblings</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Visionary ramblings]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=3.6</generator>

	<item>
		<title>About</title>
		<link>http://code.jelmerdemaat.nl/about/</link>
		<pubDate>Wed, 07 Nov 2012 14:33:57 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?page_id=7</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Jelmer who?</h3>
<p>I am Jelmer de Maat, an <a title="My other website" href="http://jelmerdemaat.nl" target="_blank">Industrial Design student</a> as well as a (front-end) developer. On this blog I ramble mostly about new CSS stuff and my ideas on how <em>the web</em> should <em>evolve</em>. Feel free to contact me via <a href="http://twitter.com/jelmerdemaat" target="_blank">Twitter</a>. You can also find me on <a href="https://github.com/jelmerdemaat" target="_blank">GitHub</a>.</p>
<p><small>Be warned! Blog may contain contrasting opinions and innovative ideas.</small></p>
<h3>You call this a website?</h3>
<p>I know, it's not very elaborate. I got tired of not being able to share my front-end-thoughts in a dedicated place, so I built this blog in one day, just to have a place to stay. When I have more time to design things around here, it will get spicier.</p>
<h3>Why the name Code and Colours?</h3>
<p>Because I like code, and colours. In the future the blog could also include some graphic design tips. And, I like the word <em>colours</em> better than <em>colors</em>. It adds some character.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2012-11-07 15:33:57</wp:post_date>
		<wp:post_date_gmt>2012-11-07 14:33:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello? Is this thing on?</title>
		<link>http://code.jelmerdemaat.nl/2012/hello-is-this-thing-on/</link>
		<pubDate>Thu, 08 Nov 2012 23:01:13 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[
<p>Hi there!</p>
<p>This is the first of (hopefully) many posts that are going to be published on this piece of internet. I have finally <a title="About" href="http://code.jelmerdemaat.nl/about/">taken some time to create a blog-thing</a> of my own, and even though it is small, it will serve its purpose for the coming months or so.</p>

<p>What you can expect here is mostly my experiments with and general thoughts on front-end development, meaning, CSS, HTML and JavaScript. The posts will be about techniques, browsers, developments of web technologies and other nerd stuff. I hope I can contribute to the discussions out there.</p>
<p>I have gathered some fun ideas for posts and experiments in the past months, so expect to have some good reading time here!</p>
<p>See you here in the near future!</p>
<p><em>Jelmer</em></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2012-11-09 00:01:13</wp:post_date>
		<wp:post_date_gmt>2012-11-08 23:01:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hello-is-this-thing-on</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Perfectly justified CSS grid technique using inline-block</title>
		<link>http://code.jelmerdemaat.nl/2012/perfectly-justified-css-grid-technique-using-inline-block/</link>
		<pubDate>Tue, 13 Nov 2012 22:29:19 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[<p><small>(TL;DR - see <a href="http://code.jelmerdemaat.nl/examples/justified-grid-test/" title="Test page" target="_blank">this test page</a> with the final result of what I'm gonna talk about.)</small></p>
<p>You know these simple horizontal menu's? Just take some <code class="inline">ul &gt; li &gt; a</code>, set the <code class="inline">li</code> to either <code class="inline">float: left</code> or <code class="inline">display: inline-block</code> and it's done. I'm probably not telling you anything new there.</p>
<p>Earlier this year I was tinkering around with such a menu. When you work with a specifically designed navigation, which is almost always the case, you have a graphical style you want to go for. And, if you're somewhat like me, you want it to be as perfect as can be. Let me pose the problem here. Sometimes, you need a menu that is perfectly aligned to both the left <em>and</em> the right. To illustrate this I present this highly scientific visual example of what I mean:</p>
<img src="http://code.jelmerdemaat.nl/wp-content/uploads/justified1.png" alt="Justified CSS grid example" title="Justified CSS grid" width="600" height="325" class="alignnone size-full wp-image-232" />
<p>Now, I'm sure there will be a fancy way the new kids do this with CSS3 flexbox layouts, but I'm solving this old style here. Partly to support older browsers, and partly because I know too little about flexbox. The technique I use to solve this can also be called a "hack", as it involves an unintended use of <code class="inline">text-align: justify</code>.</p>
<p><!--more--></p>
<h3>Justify and display: inline-block</h3>
<p>Let's go over some basics quickly. Block level elements honor "physical" properties like width and height and are characterized by their blocky appearance (i.e. they have auto 100% width and begin a new line). Inline elements go with the flow and follow their place in lines of text. Inline-block elements have something of both worlds: they can be altered in their physical properties, but also follow text flow in their position.</p>
<p><em>"Duh. Why is this important?"</em></p>
<p>It means we can (ab)use inline-block elements to form a horizontal navigation bar like the one above. To do this we use the <code class="inline">text-align</code> property of <code class="inline">justify</code>. Using justification on a normal text means it is aligned to the left as well as to the right, like so:</p>
<blockquote>
<p style="text-align: justify;"><em>And I've found that no matter where I am, or who I'm talking to, there's a common theme that emerges. Some will see this as an attempt to justify or excuse comments that are simply inexcusable. They are anxious about their futures, and feel their dreams slipping away; in an era of stagnant wages and global competition, opportunity comes to be seen as a zero sum game, in which your dreams come at my expense.</em></p>
</blockquote>
<p><small>Source: <a href="http://obamaipsum.com/" target="_blank">obamaipsum.com</a></small></p>
<p>But, more importantly, <em>the words of one sentence are spread out evenly over the with of the containing element</em>. So, what if these words were elements? Can we do that? Yes, with <code class="inline">inline-block</code>, we can! </p>
<h3>First attempts</h3>
<p>So let's set a number of elements to <code class="inline">display: inline-block</code> and throw them in a container with <code class="inline">text-align: justify</code> on it:</p>
<p>[raw]</p>
<div class="wrapper"><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div></div>
<p>[/raw]</p>
<p>[raw]</p>
<pre class="language-css" title="CSS"><code>
.wrapper{
  width: 550px;
  text-align: justify;
  background: firebrick;
}

.wrapper div{
  background: white;
  display: inline-block;
}</code>
</pre>
<p>[/raw]</p>
<p>This results into:</p>
<p><iframe width="100%" height="150" src="http://codepen.io/jelmerdemaat/full/bdHzl" frameborder="0"></iframe></p>
<p>Hmmm, not quite what we want, is it? Two problems: (1) the "words" (our <code class="inline">div</code>s) aren't spread equally over the complete sentence, and (2) there is annoying white space we don't want. Let's deal with that later. The words don't spread evenly because the sentence is too short. There is nothing that kicks the sentence into "spread mode" because its length is shorter than that of its wrapper. Add more items (words), and it will happen: </p>
<p>[raw]</p>
<div class="wrapper"><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div><div>This can be anything.</div></div>
<p>[/raw]</p>
<p>With the same CSS, the result is:</p>
<p><iframe width="100%" height="150" src="http://codepen.io/jelmerdemaat/full/uodGj" frameborder="0"></iframe></p>
<p>Cool, right?! The top row of elements is automatically aligned left <em>and</em> right to the parent <code class="inline">div</code>. But it does look totally ugly with the extra elements.</p>
<p>
So what if we could add the extra elements in another way that doesn't show an extra line? We need a method to dynamically add an element inside the wrapper, after the content, that overflows the "sentence"... let's do some pseudo-element magic!</p>
<h3>Using :after to force a line-break</h3>
<p>Here, the css :after pseudo-element is a perfect solution. It resides <em>inside</em> the assigned element, but comes <em>after</em> the content. The :after element needs to be inline-block as well to be able to overflow the sentence. Next to this, we assign a <code class="inline">width: 100%</code> to it to make sure it will always be triggering the line-break: </p>
<p>[raw]</p>
<pre class="language-css" title="CSS"><code>.wrapper{
  width: 550px;
  text-align: justify;
  background: firebrick;
}

.wrapper div{
  background: white;
  display: inline-block;
}

.wrapper:after{
  content: "";
  width: 100%;
  display: inline-block;
}</code></pre>
<p>[/raw]</p>
<p>The result:</p>
<p><iframe width="100%" height="130" src="http://codepen.io/jelmerdemaat/full/nwrgb" frameborder="0"></iframe></p>
<p>Sweet, now we almost have what we want. Only the problem of superfluous white-space remains.</p>
<h3>Removing white-space</h3>
<p>Many <a href="http://css-tricks.com/fighting-the-space-between-inline-block-elements/" title="Chris Coyier: Fighting the Space Between Inline Block Elements" target="_blank">other smart developers</a> have already taken their different takes on this, so I just searched for the best solution:</p>
<p>One way to do it is to chain the elements right after one another. No space in HTML. Keeping an eye on the restrictions and auto-formatting behavior of many content management and online publishing systems, this seemed like an impractical solution to me. The same goes for adding empty HTML comments in between the tags.</p>
<p>Another way is to leave out the end tags. Yes, <a href="http://dev.w3.org/html5/spec/syntax.html#optional-tags" title="HTML5 spec on optional tags" target="_blank">you can do that in HTML5</a>. Unfortunately, this breaks the whole construction in my experiments. It doesn't work anymore when the end tags are removed.</p>
<p><del datetime="2012-11-14T22:22:28+00:00">This leaves us with one of the nicest and cleanest options available: setting the font-size of the wrapper element to 0. This works perfectly with our solutions, and it's CSS-only.</del> This actually breaks up the whole thing in IE. Hmpf. As I have discovered, a better solution is to <em>keep the spacing in between inline-block elements</em>. This way, inline-block elements don't "stick" to each other. The only thing we have to do now is to get rid of the space the :after element is taking up. The good news: <code class="inline">font-size: 0</code> on the wrapper element takes care of this. The bad news: IE breaks. Alas, the only "solution" I have found so far is to use an IE-specific hack to reset the font-size again. IE users will be left with a very small extra space at the bottom of the wrapper. So be it, for now.</p>
<p>Without any unwanted white-space but including IE hacks (a <a href="http://robertnyman.com/2010/02/24/css-display-inline-block-why-it-rocks-and-why-it-sucks/" target="_blank">small inline-block fix</a> for IE6/7 is also implemented here using <code class="inline">zoom: 1;</code> and <code class="inline">*display: inline</code>), the final solution looks like this:</p>
<p>[raw]</p>
<pre class="language-css" title="CSS"><code>
.wrapper{
  width: 550px;
  text-align: justify;
  background: firebrick;
  font-size: 0;
  font-size: 12px\9; /* IE6-9 only hack */
}

.wrapper div{
  background: white;
  display: inline-block;
  font-size: 12px;

  zoom: 1;
  *display: inline;
}

.wrapper:after{
  content: "";
  width: 100%;
  display: inline-block;

  zoom: 1;
  *display: inline;
}
</code></pre>
<p>[/raw]</p>
<p><strong>Result:</strong></p>
<p><iframe width="100%" height="130" src="http://codepen.io/jelmerdemaat/full/HDFBL" frameborder="0"></iframe></p>
<p>And that's it! With such relatively simple CSS, you can achieve a very flexible grid-like layout. The nice this about this is that the widths of the elements can also be percentages. Try scaling your browser window on <a href="http://code.jelmerdemaat.nl/examples/justified-grid-test/" target="_blank">the test page</a> and see the automatic alignment magic happen.</p>
<p><a href="http://code.jelmerdemaat.nl/examples/justified-grid-test/" title="Test page" target="_blank">That small test page</a> lets you try out different numbers of elements and different widths. Useful for testing and debugging.</p>
<p>So, what's your take on this? Have you used this technique before? Considering browser support, how would you handle it? Do you know of any way to make the :after element take up no space across all browsers without using <code class="inline">font-size: 0</code>? Let me know in the comments!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2012-11-13 23:29:19</wp:post_date>
		<wp:post_date_gmt>2012-11-13 22:29:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>perfectly-justified-css-grid-technique-using-inline-block</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[css grid technique]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Perfectly justified CSS grid technique using inline-block - Code and Colours]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A nice hackery technique to create a perfectly justified CSS grid using inline-block and text-align justified.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_bctitle</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Marcus Stade]]></wp:comment_author>
			<wp:comment_author_email>marcus.stade@lab49.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>139.149.31.231</wp:comment_author_IP>
			<wp:comment_date>2013-02-12 17:10:20</wp:comment_date>
			<wp:comment_date_gmt>2013-02-12 16:10:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Since you're the one setting the font-size (and thus has all the info) you should be able to set a negative margin on the children of the container. So <code>.wrapper</code> gets <code>font-size: 1px;</code> and <code>.wrapper div</code> gets <code>margin-right: -1px</code>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>331</wp:comment_id>
			<wp:comment_author><![CDATA[Jelmer]]></wp:comment_author>
			<wp:comment_author_email>post@jelmerdemaat.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.208.200.131</wp:comment_author_IP>
			<wp:comment_date>2013-03-24 15:40:28</wp:comment_date>
			<wp:comment_date_gmt>2013-03-24 14:40:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm good idea, I would have to test it though because it seems like (1) there is more space because of <code>font-size: 1px</code> than just the margin at the right, and (2) not sure what IE will then make of it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>996</wp:comment_id>
			<wp:comment_author><![CDATA[BJ]]></wp:comment_author>
			<wp:comment_author_email>bushrag@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>184.38.232.154</wp:comment_author_IP>
			<wp:comment_date>2013-06-09 21:43:51</wp:comment_date>
			<wp:comment_date_gmt>2013-06-09 19:43:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Care to give me a hand with this?

Use the exact CSS above. 

Now pretend you populate the wrapper with child divs via javascript loop with this pseudo code:

Loop for X:
var wrapper = getElementById('wrapper');
var newchild = createElement('div');
newchild.id= "child"  + x;
wrapper.appendChild(newchild);

The resulting HTML from javascript looks like:

contentcontentcontentcontent

This won't style correctly. The content is correct, but the HTML needs to look like:

content
content
content
content

Any idea how to nail this in Javascript?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1628</wp:comment_id>
			<wp:comment_author><![CDATA[Siddharth Menon]]></wp:comment_author>
			<wp:comment_author_email>siddharthmenon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://3crumbs.com</wp:comment_author_url>
			<wp:comment_author_IP>182.237.129.118</wp:comment_author_IP>
			<wp:comment_date>2013-06-21 14:35:19</wp:comment_date>
			<wp:comment_date_gmt>2013-06-21 12:35:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, this is a great solution. However I am not quite happy with Justify, there is no definite spacing between blocks.

So if I have 5 blocks, it should be spaced out with a gutter space of say 20px. That way I can keep consistency when defining vertical spacing between the blocks.


This will be a great solution when dealing with different screen sizes. For smaller screens blocks per line would be 3-4 and it should look like perfect grid.

IMO, if we can get to collapse the wrapper div to number of blocks some how it will solve all the white spacing issues.

Thanks again for a nice post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1691</wp:comment_id>
			<wp:comment_author><![CDATA[Jelmer]]></wp:comment_author>
			<wp:comment_author_email>post@jelmerdemaat.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.208.200.131</wp:comment_author_IP>
			<wp:comment_date>2013-06-22 23:28:57</wp:comment_date>
			<wp:comment_date_gmt>2013-06-22 21:28:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are welcome! This hack was/is meant mainly for responsive purposes when you don't want a specific gutter width. Collapsing the parent would possibly solve our problem, but I think that's impossible to achieve here because we need the inline-block elements.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1788</wp:comment_id>
			<wp:comment_author><![CDATA[nicmare]]></wp:comment_author>
			<wp:comment_author_email>nicmare@gmx.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.128.164.192</wp:comment_author_IP>
			<wp:comment_date>2013-07-08 11:26:13</wp:comment_date>
			<wp:comment_date_gmt>2013-07-08 09:26:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[final result does not work in opera! the items are floating over the edge of the wrapper div. but result with white space works best in all browser (if you can live with white space).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1881</wp:comment_id>
			<wp:comment_author><![CDATA[Paul]]></wp:comment_author>
			<wp:comment_author_email>paul.obrien4@btinternet.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pmob.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>86.138.18.176</wp:comment_author_IP>
			<wp:comment_date>2013-07-22 23:54:09</wp:comment_date>
			<wp:comment_date_gmt>2013-07-22 21:54:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

The whitespace bug can be cured easily by adding display:table and with:100% to the parent and avoids using font-size:0 which kills inheritance. Older browsers can use negative word spacing on the parent to kill the gap and then reset it to zero on the child. That will allow support right back to IE6. The full details can be found in a quiz I set many years ago:

http://www.sitepoint.com/forums/showthread.php?709009-CSS-Test-Your-CSS-Skills-Number-35-inline-block&amp;p=4724244#post4724244

(We also solved the justified menu about 5 years ago in a similar quiz  ;))

Note that your after rule contains two useless rules:

.wrapper:after{
	content: "";
	width: 100%;
	display: inline-block;
	zoom: 1;
	*display: inline;
}

IE7 and under don't understand :after so the zoom:1.0 is wasted as Ie8+ don't have haslayout triggers as such. The *display:inline is also a rule only understood by IE7 and under and of course will never be seen because they don't understand :after. :) For ie7 and under support you would need to add an extra element to use manually (or use expressions to mimic :after)

Hope that helps.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>justified-1</title>
		<link>http://code.jelmerdemaat.nl/2012/perfectly-justified-css-grid-technique-using-inline-block/justified-1/</link>
		<pubDate>Mon, 12 Nov 2012 13:11:15 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/wp-content/uploads/justified-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[Justified example]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2012-11-12 14:11:15</wp:post_date>
		<wp:post_date_gmt>2012-11-12 13:11:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>justified-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://code.jelmerdemaat.nl/wp-content/uploads/justified-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[justified-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:2:"93";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:15:"justified-1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"justified-1-150x93.png";s:5:"width";s:3:"150";s:6:"height";s:2:"93";}s:6:"medium";a:3:{s:4:"file";s:22:"justified-1-300x46.png";s:5:"width";s:3:"300";s:6:"height";s:2:"46";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Justified menu</title>
		<link>http://code.jelmerdemaat.nl/2012/perfectly-justified-css-grid-technique-using-inline-block/justified/</link>
		<pubDate>Mon, 12 Nov 2012 22:39:03 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/wp-content/uploads/justified.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2012-11-12 23:39:03</wp:post_date>
		<wp:post_date_gmt>2012-11-12 22:39:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>justified</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://code.jelmerdemaat.nl/wp-content/uploads/justified.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[justified.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"325";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:13:"justified.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"justified-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"justified-300x162.png";s:5:"width";s:3:"300";s:6:"height";s:3:"162";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[justified menu example]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to view the In-Page Analytics overlay on your website</title>
		<link>http://code.jelmerdemaat.nl/2012/how-to-view-in-page-analytics-over-your-website/</link>
		<pubDate>Tue, 27 Nov 2012 15:51:43 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you have a website, <a href="http://w3techs.com/technologies/details/ta-googleanalytics/all/all" title="Percentages of Google Analytics users on the web" target="_blank">chances are</a> you're using Google Analytics to analyze your site's traffic. One of the more interesting and fun features is the In-Page Analytics view, where you can track exactly on which elements users click the most, and what your users' most used browser sizes are. You can even use a slider to scroll through the different browser sizes and see the percentage of users browsing your site or even any specific page with that resolution.</p>
<p>What's a bummer is that the interface of Google Analytics is not always as nice and usable as you would want. The following is a smart trick to see more of your website and less of Analytics.</p>
<p>Log in to your <a href="http://www.google.com/analytics/" target="_blank">Google Analytics panel</a>, choose your website, and go to <em>Content > In-Page Analytics</em>. Then, open a new tab and just go to the url of your current website. You should see an overlay of In-Page Analytics at the top of your site. Yay! More website space, less Google Analytics panels. In my experience you can even close the previous Google Analytics tab.<br /> </p>
<p><img src="http://code.jelmerdemaat.nl/wp-content/uploads/in-page-analytics-1024x752.png" alt="In-Page Analytics example" title="In-Page Analytics" width="640" height="470" class="alignnone size-large wp-image-216" /></p>
<p><br/></p>
<p>Note: to close the panel, you have to close the Google Analytics tab as well as the site overlay, using the "Exit" button.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2012-11-27 16:51:43</wp:post_date>
		<wp:post_date_gmt>2012-11-27 15:51:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>how-to-view-in-page-analytics-over-your-website</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[in-page analytics]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[How to view the In-Page Analytics overlay on your website - Code and Colours]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A smart trick to view the In-Page Analytics overlay window on your own website.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_bctitle</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2012/how-to-view-in-page-analytics-over-your-website/?utm_campaign=How to view the In-Page Analytics overlay on your website&utm_medium=twitter&utm_source=twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2012/how-to-view-in-page-analytics-over-your-website/?utm_campaign=How to view the In-Page Analytics overlay on your website&utm_medium=twitter&utm_source=twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";s:0:"";s:8:"sentence";s:280:"A new post on Code and Colours: How to view the In-Page Analytics overlay on your website http://code.jelmerdemaat.nl/2012/how-to-view-in-page-analytics-over-your-website/?utm_campaign=How to view the In-Page Analytics overlay on your website&utm_medium=twitter&utm_source=twitter";s:5:"error";s:303:"403 Forbidden: The request is understood, but it has been refused. This code is used when requests are understood, but are denied by Twitter. Reasons can include: Too many Tweets created in a short time or the same Tweet was submitted twice in a row, among others. This is not an error by WP to Twitter.";s:4:"code";s:3:"403";s:9:"timestamp";s:10:"1354031504";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>In-Page Analytics</title>
		<link>http://code.jelmerdemaat.nl/2012/how-to-view-in-page-analytics-over-your-website/in-page-analytics/</link>
		<pubDate>Tue, 27 Nov 2012 15:39:02 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/wp-content/uploads/in-page-analytics.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2012-11-27 16:39:02</wp:post_date>
		<wp:post_date_gmt>2012-11-27 15:39:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>in-page-analytics</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>213</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://code.jelmerdemaat.nl/wp-content/uploads/in-page-analytics.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[in-page-analytics.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1217";s:6:"height";s:3:"894";s:14:"hwstring_small";s:23:"height='94' width='128'";s:4:"file";s:21:"in-page-analytics.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"in-page-analytics-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:29:"in-page-analytics-300x220.png";s:5:"width";s:3:"300";s:6:"height";s:3:"220";}s:5:"large";a:3:{s:4:"file";s:30:"in-page-analytics-1024x752.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"752";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[In-Page Analytics example]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Justified CSS grid</title>
		<link>http://code.jelmerdemaat.nl/2012/perfectly-justified-css-grid-technique-using-inline-block/justified-2/</link>
		<pubDate>Fri, 30 Nov 2012 10:50:07 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/wp-content/uploads/justified1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2012-11-30 11:50:07</wp:post_date>
		<wp:post_date_gmt>2012-11-30 10:50:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>justified-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>75</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://code.jelmerdemaat.nl/wp-content/uploads/justified1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[justified1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"325";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:14:"justified1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"justified1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"justified1-300x162.png";s:5:"width";s:3:"300";s:6:"height";s:3:"162";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[Justified CSS grid example]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Responsive justified grids</title>
		<link>http://code.jelmerdemaat.nl/?p=234</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[responsive shit!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2013-08-10 14:31:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>responsive-justified-grids</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About &quot;Flash must die&quot; and other populist web statements</title>
		<link>http://code.jelmerdemaat.nl/2012/about-flash-must-die-and-other-populist-web-statements/</link>
		<pubDate>Sun, 23 Dec 2012 23:24:14 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>Recently, I once again encountered a comment on a news item stating that "Flash should die as soon as possible". It was a comment out of nowhere, with no explanation or reasonable context. Let me explain a bit about why I think these kinds of statements are bad for our web development community.</em></p><p>As the web evolves, new techniques come and go. It's an unwritten law that the cool stuff becomes the dull stuff after several years. Animated GIF's were cool once (and <a href="http://cinemagraphs.com/" title="Cinemagraphs are cool" target="_blank">some are still cool</a> now), just like table layouts and WYSIWYG editors once were.</p><p>Flash is a good example of a technology that has had it's best time just about now. HTML5 can do without Flash video and audio, and CSS3 has animations and new advanced styling options. In the near future, Flash will no longer be a necessity but an annoyance to implementers and users. Especially users who are fairly web-savvy associate Flash with large and disruptive ads, slow applications and vulnerability issues.</p>

<!--more-->

<p>I don't want to say Flash isn't all that. In fact, the points mentioned above could all very well be true. I can't say for sure, because I'm not a Flash developer. The point here is that it <em>feels </em>this way for users and hipster web developers. The criticism that Flash gets from these people has made it a widely hated product. <em>Flash</em> is almost like a curse word in modern web design. This is an exponentially extending trend, meaning, because more and more people hate Flash, it becomes less popular, meaning even more people will turn away from it, by which it will become less popular, etcetera.</p><h3>Is it Flash only?</h3><p>This also goes for other technologies. Dreamweaver is also on the not-for-cool-kids list, and FTP is becoming one as a result of the rising popularity of version control systems. Let me be clear by saying these developments are all fine: I totally see the benefits of using version control and a deployment framework over live FTPing everything.</p><p>Let us not, however, stoop to the level of starting a crusade on killing old technologies, for instance by posting random outrageous populist comments on blog posts. Here is why not:</p><ol><li>Your comment does not contribute anything to the web development community. Yes, you hate Flash. Yes, it should be gone soon. We know this. Maybe you could instead write your own blogpost about how you can make stuff just like people used to in Flash, but then with HTML5 stuff, eh? Wouldn't that be way cooler?</li><li>You trigger unknowing people (web surfers, starting web developers) into hating the same things you hate. You're only supporting the populist riots against these technologies. People start hating it because hating it is cool. This is not what we want. You should have an opinion about things because you are informed about what they are. (The reverse effect is also true. People love "HTML5" because lovin' it is for the cool kids. When you ask any intermediate web user "what is so cool about HTML5?", you probably won't hear anything about semantics or new JavaScript API's.)</li><li> I don't like negative thinking. Especially when expressing thoughts on the web, positivism is the way to go. Assume that everything sounds negative until you add either jokes or smileys. :)</li></ol><h3>So?</h3><p>Moral of this story: try to bash the dying technologies less, and instead spend your time on using and improving the new 'n cool things. We already know about how much you hate Flash, and Dreamweaver, and FTP, and PHP, and tables, and... all that. Educate the newcomers with the right range of information, think positive and spend your time wisely.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2012-12-24 00:24:14</wp:post_date>
		<wp:post_date_gmt>2012-12-23 23:24:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about-flash-must-die-and-other-populist-web-statements</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="visionary-ramblings"><![CDATA[Visionary ramblings]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[flash]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[About "Flash must die" and other populist web statements - Code and Colours]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A short post about why you should try to bash the dying technologies like Flash less, and instead focus on using and improving the new 'n cool things.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_bctitle</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2012/about-flash-must-die-and-other-populist-web-statements/?utm_campaign=About "Flash must die" and other populist web statements&utm_medium=twitter&utm_source=twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2012/about-flash-must-die-and-other-populist-web-statements/?utm_campaign=About "Flash must die" and other populist web statements&utm_medium=twitter&utm_source=twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:286:"My new post on Code and Colours: About "Flash must die" and other populist web statements http://code.jelmerdemaat.nl/2012/about-flash-must-die-and-other-populist-web-statements/?utm_campaign=About "Flash must die" and other populist web statements&utm_medium=twitter&utm_source=twitter";s:5:"error";s:303:"403 Forbidden: The request is understood, but it has been refused. This code is used when requests are understood, but are denied by Twitter. Reasons can include: Too many Tweets created in a short time or the same Tweet was submitted twice in a row, among others. This is not an error by WP to Twitter.";s:4:"code";i:403;s:9:"timestamp";i:1356305055;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bye Wordpress, hello Jekyll.</title>
		<link>http://code.jelmerdemaat.nl/2013/bye-wordpress-hello-jekyll/</link>
		<pubDate>Sat, 10 Aug 2013 12:56:08 +0000</pubDate>
		<dc:creator>Jelmer</dc:creator>
		<guid isPermaLink="false">http://code.jelmerdemaat.nl/?p=282</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Wordpress is nice as a blogging platform, hell, even as a CMS. It's super user-friendly compared to literally all other CMS's or blogging platforms I've seen. But, it's also just a tad too much for a small blog like this.</p>

<p>Realistically, I don't need the media page, links, themes, plugins or users that the system provides. One could strip these away, or, one can take much less effort and embrace another blogging platform. Because of the technical nature of myself and of my writings, I chose to learn static blogging with <a href="http://jekyllrb.com/" target="_blank">Jekyll</a>.</p>

<p>I am everything but savvy with command line tools, Git and deployment, but hey, let's just start and see where it will end. I've looked into the possibilities of Jekyll and it's actually very powerful, though one thing that I would need to find out is how to provide the feature of posting comments. More news on that, later.</p>

<p>The Jekyll blog will be hosted on GitHub at the custom URL <a href="http://codeandcolours.com" target="_blank">codeandcolours.com</a>. I have also disabled comments on this Wordpress blog, because of the huge amounts of spam (another reason to look for another commenting system) and this move to Jekyll in the near future. If possible, I will write a piece about the move ("From Wordpress to Jekyll") to teach everybody as nooby as myself how to do this kind of stuff.</p>
<p>Cheers, and see you at the other side!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2013-08-10 14:56:08</wp:post_date>
		<wp:post_date_gmt>2013-08-10 12:56:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bye-wordpress-hello-jekyll</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="visionary-ramblings"><![CDATA[Visionary ramblings]]></category>
		<wp:postmeta>
			<wp:meta_key>_jd_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[Small update on my code blog: #title# #url#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2013/bye-wordpress-hello-jekyll/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.jelmerdemaat.nl/2013/bye-wordpress-hello-jekyll/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:119:"Small update on my code blog: Bye Wordpress, hello Jekyll. http://code.jelmerdemaat.nl/2013/bye-wordpress-hello-jekyll/";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[jekyll]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[About moving this blog from Wordpress to Jekyll]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_bctitle</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
